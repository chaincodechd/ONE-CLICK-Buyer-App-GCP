apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appName }}-frontend
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.buyerAppFrontend.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.appName }}-frontend
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ .Values.appName }}-frontend
    spec:
      volumes:
        - name: nginx-config-volume
          configMap:
            name: {{ .Values.appName }}-nginx-conf-cm
      containers:
      - env:
        - name: REACT_APP_BASE_URL
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.appName }}-frontend-cm
              key: REACT_APP_BASE_URL
        - name: REACT_APP_FIREBASE_AUTH_DOMAIN
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.appName }}-frontend-cm
              key: REACT_APP_FIREBASE_AUTH_DOMAIN
        - name: REACT_APP_GOOGLE_API_KEY
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.appName }}-frontend-cm
              key: REACT_APP_GOOGLE_API_KEY
        envFrom:
        - secretRef:
            name: {{ .Values.appName }}-frontend-secret
        image: {{ .Values.buyerAppFrontend.image.repo }}:{{ .Values.buyerAppFrontend.image.tag }}
        volumeMounts:
        - name: nginx-config-volume
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
        imagePullPolicy: Always
        name: {{ .Values.appName }}-frontend
        ports:
        - containerPort: 80
          protocol: TCP
        - containerPort: 443
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 1Gi
          requests:
            cpu: 300m
            memory: 1Gi
        livenessProbe:
          tcpSocket:
            port: 80
          initialDelaySeconds: 60  
          periodSeconds: 300  

---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.appName }}-frontend-svc
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    app: {{ .Values.appName }}-frontend
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80
    - name: https
      protocol: TCP
      port: 443
      targetPort: 443
  type: NodePort